
services:
  # Redis for conversation memory
  redis:
    image: redis:7-alpine
    container_name: kavak-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - kavak-network

  # ChromaDB (vector database)
  chromadb:
    image: chromadb/chroma:latest
    container_name: kavak-chromadb
    ports:
      - "8001:8000"
    volumes:
      - ./chroma_data:/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - PERSIST_DIRECTORY=/chroma
    healthcheck:
      test: [ "CMD", "/bin/bash", "-c", "cat < /dev/null > /dev/tcp/localhost/8000" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - kavak-network

  # Main Kavak AI Agent API
  kavak-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kavak-api
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - REDIS_URL=redis://redis:6379/0
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8001
      - CHROMA_PERSIST_DIRECTORY=/app/data/chroma
    volumes:
      - ./src:/app/src:ro  # Mount source for development
      - ./data:/app/data
    depends_on:
      redis:
        condition: service_healthy
      chromadb:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env
    command: >
      sh -c "uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - kavak-network

  # ngrok for webhook tunneling (development only)
  ngrok:
    image: ngrok/ngrok:latest
    container_name: kavak-ngrok
    ports:
      - "4040:4040"  # ngrok dashboard
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    command: ["http", "kavak-api:8000", "--log=stdout", "--log-format=json"]
    depends_on:
      kavak-api:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "bash", "-c", "cat < /dev/null > /dev/tcp/localhost/4040"]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - kavak-network
    profiles:
      - dev  # Only for development with webhooks


  # Service to display ngrok URL for Twilio webhook
  ngrok-url:
    image: alpine:latest
    container_name: kavak-ngrok-url
    depends_on:
      ngrok:
        condition: service_healthy
    command: >
      sh -c '
      apk add --no-cache curl jq &&
      echo "Waiting for ngrok to be ready..." &&
      sleep 5 &&
      NGROK_URL=$$(curl -s http://ngrok:4040/api/tunnels | jq -r ".tunnels[0].public_url") &&
      if [ -z "$$NGROK_URL" ] || [ "$$NGROK_URL" = "null" ]; then
        echo "Could not get ngrok URL. Is ngrok running?" && exit 1;
      fi &&
      NGROK_URL="$$NGROK_URL/webhook/whatsapp" &&
      echo "" &&
      echo "=========================================" &&
      echo "   ngrok URL for Twilio webhook:" &&
      echo "   $$NGROK_URL" &&
      echo "========================================="
      '
    networks:
      - kavak-network
    profiles:
      - dev
    restart: "no"

volumes:
  redis_data:
  chroma_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./chroma_data

networks:
  kavak-network:
    driver: bridge